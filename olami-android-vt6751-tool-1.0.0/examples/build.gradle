apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "ai.olami.android.sample.vt6751"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "20171031"

        archivesBaseName = "olami-android-vt6751-tool-examples"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        sign {
            storeFile file('../olami-apk-test-key')
            storePassword 'http://olami.ai'
            keyAlias 'olami-apk-test-key'
            keyPassword 'olami.ai'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "${archivesBaseName}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    compile project(':lib')
}

// Copy output files to '/bin' after build --------------
task copyOutputFiles(type: Copy) {
    from 'build/outputs/apk'
    into "../bin"
    include '*.apk'
}

build.finalizedBy(copyOutputFiles)
// ------------------------------------------------------